logging:
  level:
    root: WARN
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG

server:
  port: 8080

keycloak-client:
  server-url: http://localhost:8180/auth
  realm: sso_realm

spring:
  application:
    name: service-gateway
  security:
    oauth2:
      client:
        registration:
          microservice-cinema:
            provider: keycloak
            client-id: microservice-cinema
            client-secret:
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8081/login/oauth2/code/keycloak
            scope: openid
          microservice-library:
            provider: keycloak
            client-id: microservice-library
            client-secret: 57d301ff-8ed2-4c6c-92e7-3a25794705d6
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8082/login/oauth2/code/keycloak
            scope: openid
          microservice-music:
            provider: keycloak
            client-id: microservice-music
            client-secret: 72ede50c-2a17-414d-85a5-d70bf42925f3
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8083/login/oauth2/code/keycloak
            scope: openid
          #Тут надо цеполять admin cli или чет такое
          #main-service:
           # provider: keycloak
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs

  cloud:
    gateway:
      routes:
        - id: microservice-cinema
          uri: https://localhost:8081
          predicates:
            - Path=/cinema/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: microservice-library
          uri: https://localhost:8082
          predicates:
            - Path=/library/**
          filters:
            - RemoveRequestHeader=Cookie
        - id: microservice-music
          uri: https://localhost:8083
          predicates:
            - Path=/music/**
          filters:
            - RemoveRequestHeader=Cookie
        #- id: main-service
        #  uri: https://localhost:8085
        #  predicates:
        #    - Path=/api/**
        #  filters:
        #    - RemoveRequestHeader=Cookie
      default-filters:
        - TokenRelay
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive

eureka:
  instance:
    #    hostname: ${DOCKER_HOST:localhost}
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
