version: '3.8'

services:

  eureka-server:
    build:
      context: eureka-server
      dockerfile: Dockerfile
    ports:
      - 9091:9091

  api-gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - eureka.client.serviceUrl.defaultZone=https://localhost:9091/eureka
      - keycloak-client.server-url=https://localhost:8081/auth
    depends_on:
      - eureka-server

  microservice-cinema:
    build:
      context: microservice-cinema
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      - eureka.client.serviceUrl.defaultZone=https://localhost:9091/eureka
      - keycloak-client.server-ur=https://localhost:8081/auth
    depends_on:
      - eureka-server

  #app:
   # image: 'docker-spring-boot-postgres:latest'
    #build:
     # context: test_service
      #dockerfile: Dockerfile
    #container_name: app
    #e#v_file:
     # - test_service/.env
    #restart: on-failure:1
    #depends_on:
    #  - db
    #ports:
    #  - 8080:8080
    #networks:
    # - sso-net

  db:
    image: 'postgres:latest'
    container_name: db
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    #networks:
    # - sso-net

  keycloak:
    image: 'jboss/keycloak'
    container_name: keycloak
    #command:
    #  - "-b"
    #  - "0.0.0.0"
    # - "-Dkeycloak.profile.feature.declarative_user_profile=enabled"
    environment:
      DB_VENDOR: postgres
      DB_ADDR: db
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: 123
      KEYCLOAK_IMPORT: /tmp/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.migration.strategy=IGNORE_EXISTING
    volumes:
      - ./keycloak-server:/tmp
    ports:
      - 8180:8443
    depends_on:
      - db
    #networks:
    # - sso-net

#networks:
#  sso-net:
#    name: sso-net
#    driver: bridge